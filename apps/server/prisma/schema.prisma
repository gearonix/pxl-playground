generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  userId Int @id @default(autoincrement())
  phoneNumber  String  @db.Char(14)
  password  String  @db.VarChar(150)
  deliveryAddress String? @default("") @db.VarChar(40)
  isAdmin Boolean @default(false)
  isBlocked Boolean @default(false)
  balance Int @default(0)
  orders UserOrder[]
  username String @db.VarChar(20) @default("")
}


model Disc {
  type String @db.Char(50)
  cusa String @db.Char(50)
  id Int @id @default(autoincrement())
  name String  @db.VarChar(150)
  cost Int
  createdAt DateTime @default(now())
}

model UserOrder {
  discs Json
  status String @db.VarChar(150)
  createdBy Int
  orderId Int @default(1)
  totalAmount Int
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  shipmentId Int
  shipment Shipment @relation(fields: [shipmentId], references: [id])
  user User @relation(fields: [createdBy], references: [userId], onDelete: Cascade)
}

model GlobalSettings {
  id Int @id @default(autoincrement())
  SITE_STATUS SiteStatus
}

model BalanceChange {
  id Int @id @default(autoincrement())
  userId Int
  type BalanceStatus
  difference Int @default(0)
  createdAt DateTime @default(now())
}

model Shipment {
  id Int @id @default(autoincrement())
  startDate DateTime @default(now())
  endDate DateTime
  orders UserOrder[]
}

enum SiteStatus {
  WORKING
  CLOSED
}

enum BalanceStatus {
  POSITIVE
  NEGATIVE
  NEUTRAL
}
